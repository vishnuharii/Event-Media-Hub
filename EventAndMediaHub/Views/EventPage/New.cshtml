﻿@model EventAndMediaHub.Models.EventDto
@{
    ViewData["Title"] = "New Event";
}

<h1>New Event</h1>

<h4>Event</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="EventPage" asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Event Name -->
            <div class="form-group">
                <label asp-for="EventName">Event Name:</label>
                <input asp-for="EventName" class="form-control" />
            </div>

            <!-- Date -->
            <div class="form-group">
                <label asp-for="Date">Date:</label>
                <input asp-for="Date" class="form-control" type="date" />
            </div>

            <!-- Description -->
            <div class="form-group">
                <label asp-for="Description">Description:</label>
                <input asp-for="Description" class="form-control" />
            </div>

            <!-- Location Dropdown -->
            <div class="form-group">
                <label asp-for="LocationId">Location:</label>
                @Html.DropDownListFor(m => m.LocationId,
                         Model.Locations,
                         "-- Select Location --",
                         new { @class = "form-control" })
            </div>

            <!-- User Dropdown -->
            <div class="form-group">
                <label asp-for="UserId">User:</label>
                @Html.DropDownListFor(m => m.UserId,
                         Model.Users,
                         "-- Select User --",
                         new { @class = "form-control" })
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>
</div>

<div>
    <a asp-action="List">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
